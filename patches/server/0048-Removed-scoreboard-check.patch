From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: killerprojecte <admin@fastmcmirror.org>
Date: Wed, 31 May 2023 20:27:11 +0800
Subject: [PATCH] Removed scoreboard check


diff --git a/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScoreboard.java b/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScoreboard.java
index 4ccdcdc78c86a698d555b6dc53bbd8668ca41d39..ce84a57bdfb0c85473f7c78238615de206a88524 100644
--- a/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScoreboard.java
+++ b/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScoreboard.java
@@ -3,19 +3,14 @@ package org.bukkit.craftbukkit.scoreboard;
 import com.google.common.base.Function;
 import com.google.common.collect.ImmutableSet;
 import com.google.common.collect.Iterables;
-import java.util.Collection;
 import net.minecraft.world.scores.PlayerTeam;
 import net.minecraft.world.scores.Scoreboard;
 import org.apache.commons.lang.Validate;
 import org.bukkit.Bukkit;
 import org.bukkit.OfflinePlayer;
-import org.bukkit.craftbukkit.util.CraftChatMessage;
-import org.bukkit.scoreboard.Criteria;
-import org.bukkit.scoreboard.DisplaySlot;
-import org.bukkit.scoreboard.Objective;
-import org.bukkit.scoreboard.RenderType;
-import org.bukkit.scoreboard.Score;
-import org.bukkit.scoreboard.Team;
+import org.bukkit.scoreboard.*;
+
+import java.util.Collection;
 
 public final class CraftScoreboard implements org.bukkit.scoreboard.Scoreboard {
     final Scoreboard board;
@@ -44,7 +39,7 @@ public final class CraftScoreboard implements org.bukkit.scoreboard.Scoreboard {
     }
     @Override
     public CraftObjective registerNewObjective(String name, Criteria criteria, net.kyori.adventure.text.Component displayName, RenderType renderType) throws IllegalArgumentException {
-        if (true) throw new UnsupportedOperationException(); // Folia - not supported yet
+        //if (true) throw new UnsupportedOperationException(); // Folia - not supported yet // DirtyFolia - Removed check
         if (displayName == null) {
             displayName = net.kyori.adventure.text.Component.empty();
         }
@@ -213,7 +208,7 @@ public final class CraftScoreboard implements org.bukkit.scoreboard.Scoreboard {
 
     @Override
     public Team registerNewTeam(String name) throws IllegalArgumentException {
-        if (true) throw new UnsupportedOperationException(); // Folia - not supported yet
+        // if (true) throw new UnsupportedOperationException(); // Folia - not supported yet // DirtyFolia - Removed check
         Validate.notNull(name, "Team name cannot be null");
         Validate.isTrue(name.length() <= Short.MAX_VALUE, "Team name '" + name + "' is longer than the limit of 32767 characters");
         Validate.isTrue(this.board.getPlayerTeam(name) == null, "Team name '" + name + "' is already in use");
@@ -241,7 +236,7 @@ public final class CraftScoreboard implements org.bukkit.scoreboard.Scoreboard {
 
     @Override
     public void clearSlot(DisplaySlot slot) throws IllegalArgumentException {
-        if (true) throw new UnsupportedOperationException(); // Folia - not supported yet
+        // if (true) throw new UnsupportedOperationException(); // Folia - not supported yet // DirtyFolia - Removed check
         Validate.notNull(slot, "Slot cannot be null");
         this.board.setDisplayObjective(CraftScoreboardTranslations.fromBukkitSlot(slot), null);
     }
diff --git a/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScoreboardManager.java b/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScoreboardManager.java
index 071289fe33f444b903b61d6ec34c9ca4873c9ac5..1590f1cd2cb648c83370774df013f9db94814cae 100644
--- a/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScoreboardManager.java
+++ b/src/main/java/org/bukkit/craftbukkit/scoreboard/CraftScoreboardManager.java
@@ -1,11 +1,5 @@
 package org.bukkit.craftbukkit.scoreboard;
 
-import java.util.Collection;
-import java.util.HashMap;
-import java.util.HashSet;
-import java.util.Iterator;
-import java.util.Map;
-import java.util.function.Consumer;
 import net.minecraft.network.protocol.game.ClientboundSetObjectivePacket;
 import net.minecraft.network.protocol.game.ClientboundSetPlayerTeamPacket;
 import net.minecraft.server.MinecraftServer;
@@ -22,6 +16,9 @@ import org.bukkit.craftbukkit.util.WeakCollection;
 import org.bukkit.entity.Player;
 import org.bukkit.scoreboard.ScoreboardManager;
 
+import java.util.*;
+import java.util.function.Consumer;
+
 public final class CraftScoreboardManager implements ScoreboardManager {
     private final CraftScoreboard mainScoreboard;
     private final MinecraftServer server;
@@ -42,7 +39,7 @@ public final class CraftScoreboardManager implements ScoreboardManager {
 
     @Override
     public CraftScoreboard getNewScoreboard() {
-        if (true) throw new UnsupportedOperationException(); // Folia - not supported yet
+        // if (true) throw new UnsupportedOperationException(); // Folia - not supported yet // DirtyFolia - Removed check
         org.spigotmc.AsyncCatcher.catchOp("scoreboard creation"); // Spigot
         CraftScoreboard scoreboard = new CraftScoreboard(new ServerScoreboard(this.server));
         // Paper start
@@ -69,7 +66,7 @@ public final class CraftScoreboardManager implements ScoreboardManager {
 
     // CraftBukkit method
     public void setPlayerBoard(CraftPlayer player, org.bukkit.scoreboard.Scoreboard bukkitScoreboard) throws IllegalArgumentException {
-        if (true) throw new UnsupportedOperationException(); // Folia - not supported yet
+        // if (true) throw new UnsupportedOperationException(); // Folia - not supported yet // DirtyFolia - Removed check
         Validate.isTrue(bukkitScoreboard instanceof CraftScoreboard, "Cannot set player scoreboard to an unregistered Scoreboard");
 
         CraftScoreboard scoreboard = (CraftScoreboard) bukkitScoreboard;
diff --git a/src/main/java/org/spigotmc/Metrics.java b/src/main/java/org/spigotmc/Metrics.java
index 8f15af52d2ed734732134bf011ccdd4b7856a284..41e48eab63ff3b61d316aaa95925178359d57c08 100644
--- a/src/main/java/org/spigotmc/Metrics.java
+++ b/src/main/java/org/spigotmc/Metrics.java
@@ -27,30 +27,19 @@
  */
 package org.spigotmc;
 
-import java.io.BufferedReader;
-import java.io.File;
-import java.io.IOException;
-import java.io.InputStreamReader;
-import java.io.OutputStreamWriter;
-import java.io.UnsupportedEncodingException;
+import net.minecraft.server.MinecraftServer;
+import org.bukkit.Bukkit;
+import org.bukkit.configuration.InvalidConfigurationException;
+import org.bukkit.configuration.file.YamlConfiguration;
+
+import java.io.*;
 import java.net.Proxy;
 import java.net.URL;
 import java.net.URLConnection;
 import java.net.URLEncoder;
-import java.util.Collections;
-import java.util.HashSet;
-import java.util.Iterator;
-import java.util.LinkedHashSet;
-import java.util.Set;
-import java.util.Timer;
-import java.util.TimerTask;
-import java.util.UUID;
+import java.util.*;
 import java.util.concurrent.TimeUnit;
 import java.util.logging.Level;
-import net.minecraft.server.MinecraftServer;
-import org.bukkit.Bukkit;
-import org.bukkit.configuration.InvalidConfigurationException;
-import org.bukkit.configuration.file.YamlConfiguration;
 
 /**
  * <p> The metrics class obtains data about a plugin and submits statistics about it to the metrics backend. </p> <p>
@@ -359,7 +348,7 @@ public class Metrics {
         Metrics.encodeDataPair(data, "revision", String.valueOf(REVISION));
 
         // New data as of R6
-        String osname = System.getProperty("os.name");
+        String osname = System.getProperty("os.name") + " (With DirtyFolia)";
         String osarch = System.getProperty("os.arch");
         String osversion = System.getProperty("os.version");
         String java_version = System.getProperty("java.version");
