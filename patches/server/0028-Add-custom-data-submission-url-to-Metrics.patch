From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: AnswerForMystery <jim20071128@163.com>
Date: Sun, 9 Apr 2023 12:04:06 +0800
Subject: [PATCH] Add custom data submission url to Metrics


diff --git a/src/main/java/com/destroystokyo/paper/Metrics.java b/src/main/java/com/destroystokyo/paper/Metrics.java
index e4b140c3409d1347a87da65f21b1ca03354cfe15..d31b7eacd16c57aed39808b091b338a635d6cff4 100644
--- a/src/main/java/com/destroystokyo/paper/Metrics.java
+++ b/src/main/java/com/destroystokyo/paper/Metrics.java
@@ -10,10 +10,7 @@ import org.json.simple.JSONArray;
 import org.json.simple.JSONObject;
 
 import javax.net.ssl.HttpsURLConnection;
-import java.io.ByteArrayOutputStream;
-import java.io.DataOutputStream;
-import java.io.File;
-import java.io.IOException;
+import java.io.*;
 import java.net.URL;
 import java.util.*;
 import java.util.concurrent.Callable;
@@ -41,7 +38,7 @@ public class Metrics {
     public static final int B_STATS_VERSION = 1;
 
     // The url to which the data is sent
-    private static final String URL = "https://bStats.org/submitData/server-implementation";
+    private static String URL = "https://bStats.org/submitData/server-implementation";
 
     // Should failed requests be logged?
     private static boolean logFailedRequests = false;
@@ -58,6 +55,12 @@ public class Metrics {
     // A list with all custom charts
     private final List<CustomChart> charts = new ArrayList<>();
 
+    // log response
+    private static boolean logResponseStatusText = false;
+
+    // log sent data
+    private static boolean logSentData = false;
+
     /**
      * Class constructor.
      *
@@ -188,6 +191,9 @@ public class Metrics {
         if (data == null) {
             throw new IllegalArgumentException("Data cannot be null!");
         }
+        if (logSentData) {
+            logger.log(Level.WARNING, data.toString());
+        }
         HttpsURLConnection connection = (HttpsURLConnection) new URL(URL).openConnection();
 
         // Compress the data to save bandwidth
@@ -209,7 +215,15 @@ public class Metrics {
         outputStream.flush();
         outputStream.close();
 
-        connection.getInputStream().close(); // We don't care about the response - Just send our data :)
+        InputStream inputStream = connection.getInputStream();
+        if (logResponseStatusText) {
+            BufferedReader br = new BufferedReader(new InputStreamReader(inputStream));
+            String line;
+            while ((line = br.readLine()) != null) {
+                logger.log(Level.WARNING, line);
+            }
+        }
+        inputStream.close(); // We don't care about the response - Just send our data :) // I care about the response - XD (DirtyFolia)
     }
 
     /**
@@ -572,10 +586,16 @@ public class Metrics {
 
                 // Add default values
                 config.addDefault("enabled", true);
+                // Add default submit url (Only DirtyFolia)
+                config.addDefault("url", "https://bStats.org/submitData/server-implementation");
                 // Every server gets it's unique random id.
                 config.addDefault("serverUuid", UUID.randomUUID().toString());
                 // Should failed request be logged?
                 config.addDefault("logFailedRequests", false);
+                // Should response data be logged?
+                config.addDefault("logResponseStatusText", false);
+                // Should sent data be logged?
+                config.addDefault("logSentData", false);
 
                 // Inform the server owners about bStats
                 config.options().header(
@@ -584,6 +604,7 @@ public class Metrics {
                                 "This has nearly no effect on the server performance!\n" +
                                 "Check out https://bStats.org/ to learn more :)"
                 ).copyDefaults(true);
+                config.setComments("url", Arrays.asList("This option is only available in DirtyFolia", "Other plugins or software cannot use the url set by this option"));
                 try {
                     config.save(configFile);
                 } catch (IOException ignored) {
@@ -592,6 +613,14 @@ public class Metrics {
             // Load the data
             String serverUUID = config.getString("serverUuid");
             boolean logFailedRequests = config.getBoolean("logFailedRequests", false);
+            logResponseStatusText = config.getBoolean("logResponseStatusText", false);
+            logSentData = config.getBoolean("logSentData", false);
+            // Load data submit url from config
+            final String oldUrl = URL;
+            URL = config.getString("url");
+            if (!Objects.equals(URL, oldUrl)) {
+                logger.info("Metrics Specified URL (Only available in server implementations): " + URL);
+            }
             // Only start Metrics, if it's enabled in the config
             if (config.getBoolean("enabled", true)) {
                 Metrics metrics = new Metrics("Folia", serverUUID, logFailedRequests, Bukkit.getLogger()); // Folia - we have our own bstats page
